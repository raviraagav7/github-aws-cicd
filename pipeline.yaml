AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD pipeline for github projects
Parameters:
  GitHubOwner:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: raviraagav7
  GitHubRepository:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
  GitHubBranch:
    Type: String
    AllowedPattern: '[A-Za-z0-9-]+'
    Default: main
  PassGitHubPersonalAccessTokenToCodeBuild:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Description: >
      Determines whether or not your personal access token is passed to CodeBuild. Set this value to
      "true" if this is the first time using CodeBuild with GitHub, as CodeBuild only supports one
      personal access token per account, per region. If you have already configured other CodeBuild
      projects to integrate with GitHub previously, set this value to "false".

Conditions:
  CreateCodeBuildCredentials: !Equals [ !Sub "${PassGitHubPersonalAccessTokenToCodeBuild}", "true" ]

Resources:
  CloudBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource: '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: '*'
  
  CloudBuildSourceCredential:
    Type: 'AWS::CodeBuild::SourceCredential'
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'

  CloudTestProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Ref 'AWS::StackName'
      ServiceRole: !GetAtt CloudBuildServiceRole.Arn
      Source:
        GitCloneDepth: 1
        Type: GITHUB
        Location: !Sub 'https://github.com/${GitHubOwner}/${GitHubRepository}.git'
        Auth:
          Type: OAUTH
          Resource: !Ref CloudBuildSourceCredential
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              commands:
                - ls
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_SOURCE_CACHE
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED
              ExcludeMatchedPattern: false
            - Type: BASE_REF
              Pattern: !Sub '^refs/heads/${GitHubBranch}$'
              ExcludeMatchedPattern: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:7.0'

  PipelineFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: CodePipelineFailureAlarm
      AlarmDescription: Alarm to alert when CodePipeline fails
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: Failed
      Namespace: AWS/CodePipeline
      Dimensions:
        - Name: !Ref 'AWS::StackName'
          Value: !Ref CodePipeline
      Statistic: Sum
      Period: 60
      Threshold: 1
      AlarmActions:
        - !Ref AlarmNotificationTopic
      AlarmDescription: "CodePipeline has failed"
      TreatMissingData: missing

  AlarmNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: CodePipelineAlarmTopic
      Subscription:
        - Endpoint: raviraagav7@gmail.com  # Replace with your email or other endpoints for notifications
          Protocol: email
        
  CloudPipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: '*'
              - Sid: S3PutObjectPolicy
                Effect: Allow
                Action:
                  - 's3:PutObject'
                Resource: '*'
              - Sid: S3BucketIdentity
                Effect: Allow
                Action:
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: '*'
              - Sid: CloudBuildPolicy
                Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
  
  CodePipelineArtifactStore:
    Type: 'AWS::S3::Bucket'
    Properties:
      VersioningConfiguration:
        Status: Enabled
  
  CodePipelineWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt CloudPipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStore
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              RunOrder: 1
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepository
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: '{{resolve:secretsmanager:GITHUB_ACCESS:SecretString:GITHUB_ACCESS_TOKEN}}'
              OutputArtifacts:
                - Name: SourceCode
        
        - Name: Test
          Actions:
            - Name: Test
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CloudTestProject
              InputArtifacts:
                - Name: SourceCode